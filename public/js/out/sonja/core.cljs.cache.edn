{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name sonja.core, :imports nil, :requires {r reagent.core, reagent.core reagent.core}, :uses nil, :defs {main-component {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 43, :column 7, :end-line 43, :end-column 21, :arglists (quote ([]))}, :name sonja.core/main-component, :variadic false, :file "src/sonja/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mount-root {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 47, :column 7, :end-line 47, :end-column 17, :arglists (quote ([]))}, :name sonja.core/mount-root, :variadic false, :file "src/sonja/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, by-id {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 9, :column 7, :end-line 9, :end-column 12, :arglists (quote ([id]))}, :name sonja.core/by-id, :variadic false, :file "src/sonja/core.cljs", :end-column 12, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, init! {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 50, :column 7, :end-line 50, :end-column 12, :arglists (quote ([]))}, :name sonja.core/init!, :variadic false, :file "src/sonja/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-image-data {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 22, :column 7, :end-line 22, :end-column 21, :arglists (quote ([context]))}, :name sonja.core/get-image-data, :variadic false, :file "src/sonja/core.cljs", :end-column 21, :method-params ([context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([context]))}, w {:name sonja.core/w, :file "src/sonja/core.cljs", :line 4, :column 1, :end-line 4, :end-column 7, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 4, :column 6, :end-line 4, :end-column 7}}, put-image-data {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 25, :column 7, :end-line 25, :end-column 21, :arglists (quote ([context image-data]))}, :name sonja.core/put-image-data, :variadic false, :file "src/sonja/core.cljs", :end-column 21, :method-params ([context image-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([context image-data]))}, noise! {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 30, :column 7, :end-line 30, :end-column 13, :arglists (quote ([context image]))}, :name sonja.core/noise!, :variadic false, :file "src/sonja/core.cljs", :end-column 13, :method-params ([context image]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([context image]))}, get-px {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 15, :column 7, :end-line 15, :end-column 13, :arglists (quote ([data y x]))}, :name sonja.core/get-px, :variadic false, :file "src/sonja/core.cljs", :end-column 13, :method-params ([data y x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data y x]))}, counter {:name sonja.core/counter, :file "src/sonja/core.cljs", :line 28, :column 1, :end-line 28, :end-column 13, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 28, :column 6, :end-line 28, :end-column 13}}, wh {:name sonja.core/wh, :file "src/sonja/core.cljs", :line 6, :column 1, :end-line 6, :end-column 8, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 6, :column 6, :end-line 6, :end-column 8}}, h {:name sonja.core/h, :file "src/sonja/core.cljs", :line 5, :column 1, :end-line 5, :end-column 7, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 5, :column 6, :end-line 5, :end-column 7}}, wh-by-2 {:name sonja.core/wh-by-2, :file "src/sonja/core.cljs", :line 7, :column 1, :end-line 7, :end-column 13, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 7, :column 6, :end-line 7, :end-column 13}}, map-px {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 12, :column 7, :end-line 12, :end-column 13, :arglists (quote ([y x]))}, :name sonja.core/map-px, :variadic false, :file "src/sonja/core.cljs", :end-column 13, :method-params ([y x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([y x]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:div}, :order [:div]}, :doc nil}