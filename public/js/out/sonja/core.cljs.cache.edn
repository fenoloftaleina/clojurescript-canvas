{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name sonja.core, :imports nil, :requires {r reagent.core, reagent.core reagent.core}, :uses nil, :defs {main-component {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 65, :column 7, :end-line 65, :end-column 21, :arglists (quote ([]))}, :name sonja.core/main-component, :variadic false, :file "src/sonja/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ease-out {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 54, :column 7, :end-line 54, :end-column 15, :arglists (quote ([a]))}, :name sonja.core/ease-out, :variadic false, :file "src/sonja/core.cljs", :end-column 15, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a]))}, mount-root {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 75, :column 7, :end-line 75, :end-column 17, :arglists (quote ([]))}, :name sonja.core/mount-root, :variadic false, :file "src/sonja/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, pixelize! {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 17, :column 7, :end-line 17, :end-column 16, :arglists (quote ([context m]))}, :name sonja.core/pixelize!, :variadic false, :file "src/sonja/core.cljs", :end-column 16, :method-params ([context m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([context m]))}, by-id {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 7, :column 7, :end-line 7, :end-column 12, :arglists (quote ([id]))}, :name sonja.core/by-id, :variadic false, :file "src/sonja/core.cljs", :end-column 12, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, init! {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 78, :column 7, :end-line 78, :end-column 12, :arglists (quote ([]))}, :name sonja.core/init!, :variadic false, :file "src/sonja/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, w {:name sonja.core/w, :file "src/sonja/core.cljs", :line 4, :column 1, :end-line 4, :end-column 7, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 4, :column 6, :end-line 4, :end-column 7}}, pow {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 51, :column 7, :end-line 51, :end-column 10, :arglists (quote ([a x]))}, :name sonja.core/pow, :variadic false, :file "src/sonja/core.cljs", :end-column 10, :method-params ([a x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a x]))}, happening {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 57, :column 7, :end-line 57, :end-column 16, :arglists (quote ([context]))}, :name sonja.core/happening, :variadic false, :file "src/sonja/core.cljs", :end-column 16, :method-params ([context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([context]))}, get-px {:protocol-inline nil, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 10, :column 7, :end-line 10, :end-column 13, :arglists (quote ([data y x]))}, :name sonja.core/get-px, :variadic false, :file "src/sonja/core.cljs", :end-column 13, :method-params ([data y x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data y x]))}, counter {:name sonja.core/counter, :file "src/sonja/core.cljs", :line 49, :column 1, :end-line 49, :end-column 13, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 49, :column 6, :end-line 49, :end-column 13}}, h {:name sonja.core/h, :file "src/sonja/core.cljs", :line 5, :column 1, :end-line 5, :end-column 7, :meta {:file "/Users/ja/sonja/src/sonja/core.cljs", :line 5, :column 6, :end-line 5, :end-column 7}}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:button :on-click :div}, :order [:div :button :on-click]}, :doc nil}